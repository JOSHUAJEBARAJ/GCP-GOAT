name: "Release Pipeline"
on:
  push:
    tags:
      - v*
jobs:
  package:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [16, 18, 20]
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f #v2: v2.3.4 available
      - name: "Use Node.js ${{ matrix.node-version }}"
        uses: actions/setup-node@f1f314fca9dfce2769ece7d933488f076716723e #v1: v2.x available
        with:
          node-version: ${{ matrix.node-version }}
      - name: "Install CLI tools"
        run: |
          npm install -g @angular/cli
          npm install -g grunt-cli
      - name: "Set packaging options for Grunt"
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
          echo "PCKG_OS_NAME=win32" >> $GITHUB_ENV
          elif [ "$RUNNER_OS" == "macOS" ]; then
          echo "PCKG_OS_NAME=darwin" >> $GITHUB_ENV
          else
          echo "PCKG_OS_NAME=linux" >> $GITHUB_ENV
          fi
          echo "PCKG_CPU_ARCH=x64" >> $GITHUB_ENV
          echo "PCKG_NODE_VERSION=${{ matrix.node-version }}" >> $GITHUB_ENV
        shell: bash
      - name: "Package application"
        run: |
          npm install --production
          npm install -g grunt-cli
          npm run package:ci
      - name: 'Attach packaged archive to tag release'
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f #v2: v2.3.4 available
      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480 #v1: V1.2.0 available
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 #v1
      - name: "Login to DockerHub"
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9 #v1.10
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: "Get tag name"
        id: tag
        uses: dawidd6/action-get-tag@v1
      - name: "Set labels for ${{ github.ref }}"
        run: |
          echo "VCS_REF=`git rev-parse --short HEAD`" >> $GITHUB_ENV
          echo "BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%SZ”`" >> $GITHUB_ENV
      - name: "Build and push for AMD64 and ARM64 processors"
        uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229 #note: newer is available
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            bkimminich/juice-shop:${{ steps.tag.outputs.tag }}
          build-args: |
            VCS_REF=${{ env.VCS_REF }}
            BUILD_DATE=${{ env.BUILD_DATE }}
  notify-slack:
    if: always()
    needs:
      - package
      - docker
    runs-on: ubuntu-latest
    steps:
      - name: "Slack workflow notification"
        uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
